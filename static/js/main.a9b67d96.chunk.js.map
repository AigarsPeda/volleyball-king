{"version":3,"sources":["ui/Theme.ts","components/Form.tsx","components/Player.tsx","Utils/findWinner.ts","components/Game.tsx","Utils/gameLogic.ts","components/EditPlayer.tsx","components/Stats.tsx","components/TournamentEnd.tsx","components/PlayerCountSelect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","typography","h4","fontSize","subtitle1","useStyles","makeStyles","root","margin","maxWidth","form","display","flexDirection","button","marginTop","width","height","backgroundClip","background","color","textField","Form","props","savePlayerArrayToSate","useState","name","setName","classes","className","onSubmit","e","preventDefault","TextField","label","required","value","onChange","target","InputProps","Button","variant","type","createStyles","paper","padding","spacing","textAlign","backgroundColor","fontWeight","letterSpacing","Player","player","Grid","container","direction","Paper","whoIsWinner","team","playerArray","teamAScore","playerOne","playerTwo","map","id","bigPoints","smallPoints","parseInt","flexGrow","text","borderRadius","maskedInput","dots","marginBottom","playerPaper","justifyContent","border","Game","setPlayerArray","setGameNumber","gameNumber","numberOfPlayers","setTeamAScore","teamBScore","setTeamBScore","teamA","teamB","allowOnlyNumbersInInput","replace","forEach","push","gameForFive","gameForFour","justify","item","style","inputProps","maxLength","onInput","lg","xs","a","key","b","onClick","length","newPlayerArray","prev","position","top","left","right","bottom","paddingTop","paddingLeft","paddingRight","EditPlayer","playerToEdit","saveNewPlayerName","console","log","useEffect","table","borderBottom","cursor","numbers","pencil","marginRight","Stats","sorterPlayerArray","setSortingOrder","editPlayerName","openEditPlayer","setOpenEditPlayer","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","editPlayer","TournamentEnd","removePlayerArrayFromLocalStorage","window","confirm","formControl","minWidth","title","WebkitBackgroundClip","WebkitTextFillColor","grid","marginLeft","PlayerCountSelect","setNumberOfPlayers","React","open","setOpen","handleOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","event","MenuItem","App","JSON","parse","localStorage","getItem","sortingOrder","setPlayerToEdit","setItem","stringify","sort","ThemeProvider","newPlayer","Math","floor","random","trim","arrayOfId","includes","find","newName","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9b67d96.chunk.js","sourcesContent":["import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n\nconst orange = \"#f86a28\";\nconst red = \"rgba(232,48,58,1)\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${orange}`\n    },\n    secondary: {\n      main: `${red}`\n    }\n  },\n  typography: {\n    //fontFamily: \"Open Sans, Helvetica\",\n    h4: { fontSize: \"35px\" },\n    subtitle1: {}\n  }\n});\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    maxWidth: \"25em\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  button: {\n    marginTop: \"10px\",\n    width: \"100%\",\n    height: \"50px\",\n    backgroundClip: \"#rgb(248,106,40)\",\n    background:\n      \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n    color: \"#fff\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  }\n}));\n\ninterface IForm {\n  savePlayerArrayToSate: (name: string) => void;\n}\n\nconst Form: React.FC<IForm> = props => {\n  const { savePlayerArrayToSate } = props;\n\n  const [name, setName] = useState<string>(\"\");\n  const classes = useStyles();\n\n  const makeArrayOfPlayers = (e: React.FormEvent) => {\n    e.preventDefault();\n    savePlayerArrayToSate(name);\n    setName(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={makeArrayOfPlayers}>\n        <TextField\n          label=\"Spēlētāja vārds\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          Pievienot spēlētāju\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      background:\n        \"linear-gradient(180deg, rgba(46,46,60,1) 0%, rgba(42,42,54,1) 100%)\",\n      backgroundColor: \"#22222a\",\n      color: \"#ffffff\",\n      margin: \"8px\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"3px\"\n    }\n  })\n);\n\ninterface IPlayer {\n  player: Player;\n}\n\nconst Player: React.FC<IPlayer> = props => {\n  const { player } = props;\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Paper className={classes.paper}>{player.name}</Paper>\n    </Grid>\n  );\n};\n\nexport default Player;\n","export const whoIsWinner = (\n  team: Player[],\n  playerArray: Player[],\n  teamAScore: string\n) => {\n  const [playerOne, playerTwo] = team;\n  const newPlayerArray = playerArray.map(player => {\n    if (player.id === playerOne.id || player.id === playerTwo.id) {\n      return {\n        ...player,\n        bigPoints: player.bigPoints + 1,\n        smallPoints: player.smallPoints + parseInt(teamAScore)\n      };\n    }\n    return player;\n  });\n  return newPlayerArray;\n};\n","import React, { useState } from \"react\";\nimport Player from \"./Player\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  Button,\n  TextField\n} from \"@material-ui/core\";\n\nimport { gameForFive, gameForFour } from \"../Utils/gameLogic\";\nimport { whoIsWinner } from \"../Utils//findWinner\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      marginTop: \"10px\"\n    },\n    borderRadius: {\n      fontSize: 32,\n      color: \"#fff\",\n      padding: \"10px\"\n    },\n    textField: {\n      margin: \"5px\",\n      width: \"75px\",\n      fontSize: \"45px\",\n      textAlign: \"center\"\n    },\n    maskedInput: {\n      height: \"50px\",\n      fontSize: \"35px\",\n      width: \"55px\",\n      textAlign: \"center\"\n    },\n    dots: {\n      fontSize: \"45px\"\n    },\n    button: {\n      backgroundClip: \"rgb(248,106,40)\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      marginTop: \"10px\",\n      width: \"100%\",\n      height: \"50px\",\n      color: \"#fff\",\n      marginBottom: \"15px\"\n    },\n    playerPaper: {\n      padding: \"1px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      border: \"1px solid rgba(248,106,40,1)\",\n      backgroundColor: \"transparent\"\n    }\n  })\n);\n\ninterface IGame {\n  playerArray: Player[];\n  setPlayerArray: React.Dispatch<React.SetStateAction<Player[]>>;\n  setGameNumber: React.Dispatch<any>;\n  gameNumber: number;\n  numberOfPlayers: number;\n}\n\nconst Game: React.FC<IGame> = props => {\n  const {\n    playerArray,\n    setPlayerArray,\n    setGameNumber,\n    gameNumber,\n    numberOfPlayers\n  } = props;\n  const classes = useStyles();\n\n  const [teamAScore, setTeamAScore] = useState(\"\");\n  const [teamBScore, setTeamBScore] = useState(\"\");\n\n  const teamA: Player[] = [];\n  const teamB: Player[] = [];\n\n  const findWinner = () => {\n    if (teamAScore.length === 0 || teamBScore.length === 0) {\n      return;\n    }\n    if (teamAScore === teamBScore) {\n      return;\n    }\n    if (parseInt(teamAScore) > parseInt(teamBScore)) {\n      const newPlayerArray = whoIsWinner(teamA, playerArray, teamAScore);\n      setPlayerArray(newPlayerArray);\n    }\n    if (parseInt(teamAScore) < parseInt(teamBScore)) {\n      const newPlayerArray = whoIsWinner(teamB, playerArray, teamBScore);\n      setPlayerArray(newPlayerArray);\n    }\n    setTeamAScore(\"\");\n    setTeamBScore(\"\");\n    setGameNumber((prev: number) => prev + 1);\n  };\n\n  const allowOnlyNumbersInInput = (e: any) => {\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n  };\n\n  //Game logic for 5\n  if (numberOfPlayers === 5) {\n    gameForFive(playerArray, gameNumber, teamA, teamB);\n  }\n  //Game logic for 4\n  if (numberOfPlayers === 4) {\n    gameForFour(playerArray, gameNumber, teamA, teamB);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Paper\n            style={{\n              marginTop: \"15px\",\n              background:\n                \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n              marginBottom: \"10px\"\n            }}\n          >\n            <TextField\n              className={classes.textField}\n              value={teamAScore}\n              onChange={e => setTeamAScore(e.target.value)}\n              variant=\"outlined\"\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n            <span className={classes.dots}>:</span>\n            <TextField\n              className={classes.textField}\n              value={teamBScore}\n              variant=\"outlined\"\n              onChange={e => setTeamBScore(e.target.value)}\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} justify=\"center\" direction=\"row\">\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamA.map(a => {\n              return <Player key={a.id} player={a} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamB.map(b => {\n              return <Player key={b.id} player={b} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid container justify=\"center\" direction=\"row\">\n          <Grid item lg={3} xs={10}>\n            <Button\n              onClick={findWinner}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Nākamā spēle\n            </Button>\n          </Grid>\n          <Grid item lg={12} xs={10}>\n            <div\n              style={{\n                textAlign: \"center\",\n                marginBottom: \"15px\",\n                color: \"#fff\",\n                background: \"transparent\"\n              }}\n            >\n              <h4 style={{ letterSpacing: \"2px\" }}>\n                Spēle Nr{\" \"}\n                <span style={{ fontSize: \"28px\", color: \"rgba(232,48,58,1)\" }}>\n                  {gameNumber}\n                </span>{\" \"}\n              </h4>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Game;\n","//Game for Five\nexport const gameForFive = (\n  playerArray: Player[],\n  gameNumber: number,\n  teamA: Player[],\n  teamB: Player[]\n) => {\n  playerArray.forEach(player => {\n    switch (gameNumber) {\n      case 1:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 2:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 3:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 4:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 5:\n        if (player.id === 1 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 6:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 7:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 8:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 9:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 10:\n        if (player.id === 1 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 11:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 12:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 13:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 14:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 15:\n        if (player.id === 1 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      default:\n        break;\n    }\n  });\n};\n\n//Game for Four\nexport const gameForFour = (\n  playerArray: Player[],\n  gameNumber: number,\n  teamA: Player[],\n  teamB: Player[]\n) => {\n  playerArray.forEach(player => {\n    switch (gameNumber) {\n      case 1:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 2:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 3:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 4:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 5:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 6:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 7:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 8:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 9:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      default:\n        break;\n    }\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    //maxWidth: \"25em\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(60, 58, 66, 0.900)\"\n  },\n  form: {\n    paddingTop: \"15em\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    margin: \"auto\",\n    maxWidth: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  }\n}));\n\ninterface IEditPlayer {\n  playerToEdit: Player | undefined;\n  saveNewPlayerName: (playerToEdit: Player, newName: string) => void;\n}\n\nconst EditPlayer: React.FC<IEditPlayer> = props => {\n  const [name, setName] = useState(\"\");\n  const { playerToEdit, saveNewPlayerName } = props;\n  const classes = useStyles();\n\n  console.log(name);\n\n  useEffect(() => {\n    if (!playerToEdit) {\n      return;\n    }\n    setName(playerToEdit.name);\n  }, [playerToEdit]);\n\n  const savePlayerName = () => {\n    if (!playerToEdit) {\n      return;\n    }\n    saveNewPlayerName(playerToEdit, name);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={savePlayerName}>\n        <TextField\n          required\n          label=\"Spēlētāja vārds\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Saglabāt spēlētāju\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPlayer;\n","import React, { useState } from \"react\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody\n} from \"@material-ui/core\";\nimport EditPlayer from \"./EditPlayer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      maxWidth: 650,\n      backgroundColor: \"#2a2b37\",\n      color: \"#fff\"\n    },\n    text: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"2.5px\",\n      borderBottom: \"none\",\n      cursor: \"pointer\"\n    },\n    numbers: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n\n      borderBottom: \"none\"\n    },\n    pencil: {\n      marginRight: \"15px\",\n      fontSize: \"10px\"\n    }\n  })\n);\n\ninterface IStats {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n  editPlayerName?: (id: number) => void;\n  playerToEdit?: Player | undefined;\n  saveNewPlayerName?: (playerToEdit: Player, newName: string) => void;\n  gameNumber?: number;\n  openEditPlayer?: boolean;\n  setOpenEditPlayer?: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Stats: React.FC<IStats> = props => {\n  const {\n    sorterPlayerArray,\n    setSortingOrder,\n    editPlayerName,\n    playerToEdit,\n    saveNewPlayerName,\n    gameNumber,\n    openEditPlayer,\n    setOpenEditPlayer\n  } = props;\n  const classes = useStyles();\n\n  const editPlayer = (player: Player) => {\n    if (!editPlayerName || !setOpenEditPlayer) {\n      return;\n    }\n    editPlayerName(player.id);\n    setOpenEditPlayer(true);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <TableContainer\n          component={Paper}\n          style={{ maxWidth: \"500px\", marginTop: \"10px\" }}\n        >\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.text}></TableCell>\n                <TableCell\n                  align=\"right\"\n                  className={classes.text}\n                  onClick={() => setSortingOrder(\"smallPoints\")}\n                >\n                  Punkti\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  className={classes.text}\n                  onClick={() => setSortingOrder(\"bigPoints\")}\n                >\n                  Uzvaras\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sorterPlayerArray.map(player => (\n                <TableRow key={player.id}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.text}\n                  >\n                    {editPlayerName && gameNumber === 1 && (\n                      <FaPencilAlt\n                        className={classes.pencil}\n                        onClick={() => editPlayer(player)}\n                      />\n                    )}\n\n                    {player.name}\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.numbers}>\n                    {player.smallPoints}\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.numbers}>\n                    {player.bigPoints}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      {editPlayerName && saveNewPlayerName && openEditPlayer && (\n        <EditPlayer\n          playerToEdit={playerToEdit}\n          saveNewPlayerName={saveNewPlayerName}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\n\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Stats from \"./Stats\";\n\ninterface ITournamentEnd {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n  removePlayerArrayFromLocalStorage: () => void;\n}\n\nconst TournamentEnd: React.FC<ITournamentEnd> = props => {\n  const {\n    sorterPlayerArray,\n    setSortingOrder,\n    removePlayerArrayFromLocalStorage\n  } = props;\n  return (\n    <Grid container justify=\"center\">\n      <h1 style={{ fontSize: \"45px\", color: \"#fff\" }}>Turnīrs Beidzies!</h1>\n      <Stats\n        sorterPlayerArray={sorterPlayerArray}\n        setSortingOrder={setSortingOrder}\n      />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button\n          //color=\"primary\"\n          style={{\n            marginTop: \"10px\",\n            color: \"rgba(232,48,58,1)\",\n            fontSize: \"25px\",\n            letterSpacing: \"2px\"\n          }}\n          onClick={() => {\n            if (window.confirm(\"Vai tiešām sākt jaunu turnīru?\"))\n              removePlayerArrayFromLocalStorage();\n          }}\n        >\n          SĀKT JAUNU TŪRNĪRU\n        </Button>\n      </div>\n    </Grid>\n  );\n};\n\nexport default TournamentEnd;\n","import React from \"react\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2),\n      color: \"#fff\",\n      fontSize: \"18px\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 190\n    },\n    title: {\n      fontSize: \"60px\",\n      fontWeight: \"bold\",\n      letterSpacing: \"3px\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      WebkitBackgroundClip: \"text\",\n      WebkitTextFillColor: \"transparent\"\n    },\n    grid: {\n      marginBottom: \"10px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  })\n);\n\ninterface IPlayerCountSelect {\n  numberOfPlayers: number | undefined;\n  setNumberOfPlayers: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst PlayerCountSelect: React.FC<IPlayerCountSelect> = props => {\n  const classes = useStyles();\n  const { numberOfPlayers, setNumberOfPlayers } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumberOfPlayers(event.target.value as number);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={classes.grid}>\n        <h1 className={classes.title}>THE KING</h1>\n      </Grid>\n      <Grid item style={{ margin: \"auto\" }}>\n        <Button className={classes.button} onClick={handleOpen}>\n          Cik spēlētāju būs?\n        </Button>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Skaits</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={numberOfPlayers}\n            onChange={handleChange}\n          >\n            <MenuItem value={0} style={{ letterSpacing: \"1px\" }}>\n              <em>None</em>\n            </MenuItem>\n\n            <MenuItem value={4} style={{ letterSpacing: \"1px\" }}>\n              <em>Četri</em>\n            </MenuItem>\n            <MenuItem value={5} style={{ letterSpacing: \"1px\" }}>\n              <em>Pieci</em>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PlayerCountSelect;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./ui/Theme\";\nimport { Button } from \"@material-ui/core\";\n\nimport Form from \"./components/Form\";\nimport Game from \"./components/Game\";\nimport Stats from \"./components/Stats\";\nimport TournamentEnd from \"./components/TournamentEnd\";\nimport PlayerCountSelect from \"./components/PlayerCountSelect\";\n\nconst App: React.FC = () => {\n  const [playerArray, setPlayerArray] = useState<Player[]>(() =>\n    JSON.parse(localStorage.getItem(\"playerArray\") || \"[]\")\n  );\n  const [gameNumber, setGameNumber] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"gameNumber\") || \"1\")\n  );\n  const [numberOfPlayers, setNumberOfPlayers] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"numberOfPlayers\") || \"0\")\n  );\n  const [sortingOrder, setSortingOrder] = useState(\"bigPoints\");\n  const [playerToEdit, setPlayerToEdit] = useState<Player>();\n  const [openEditPlayer, setOpenEditPlayer] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"playerArray\", JSON.stringify(playerArray));\n    localStorage.setItem(\"gameNumber\", JSON.stringify(gameNumber));\n    localStorage.setItem(\"numberOfPlayers\", JSON.stringify(numberOfPlayers));\n  }, [playerArray, gameNumber, numberOfPlayers]);\n\n  const removePlayerArrayFromLocalStorage = () => {\n    let newPlayerArray = playerArray;\n    newPlayerArray = [];\n    setPlayerArray(newPlayerArray);\n    let newGameNumber = gameNumber;\n    newGameNumber = 1;\n    setGameNumber(newGameNumber);\n    let newNumberOfPlayers = numberOfPlayers;\n    newNumberOfPlayers = 0;\n    setNumberOfPlayers(newNumberOfPlayers);\n  };\n\n  const savePlayerArrayToSate = (name: string) => {\n    const newPlayer: Player = {\n      id: Math.floor(Math.random() * Math.floor(numberOfPlayers)),\n      name: name.trim(),\n      smallPoints: 0,\n      bigPoints: 0\n    };\n\n    const arrayOfId = playerArray.map(player => player.id);\n\n    do {\n      newPlayer.id = Math.floor(Math.random() * Math.floor(numberOfPlayers));\n    } while (arrayOfId.includes(newPlayer.id));\n\n    setPlayerArray([...playerArray, newPlayer]);\n  };\n\n  const sorterPlayerArray = playerArray.sort(function(a, b) {\n    if (sortingOrder === \"bigPoints\") {\n      return b.bigPoints - a.bigPoints;\n    }\n    if (sortingOrder === \"smallPoints\") {\n      return b.smallPoints - a.smallPoints;\n    }\n    return b.id - a.id;\n  });\n\n  const editPlayerName = (id: number) => {\n    const newPlayer = playerArray.find(player => player.id === id);\n    setPlayerToEdit(newPlayer);\n  };\n\n  const saveNewPlayerName = (playerToEdit: Player, newName: string) => {\n    const newPlayerArray = playerArray.map(player => {\n      if (player.id === playerToEdit.id) {\n        return {\n          ...player,\n          name: newName\n        };\n      }\n      return player;\n    });\n    setPlayerArray(newPlayerArray);\n  };\n\n  if (numberOfPlayers === 0) {\n    return (\n      <ThemeProvider theme={theme}>\n        <PlayerCountSelect\n          numberOfPlayers={numberOfPlayers}\n          setNumberOfPlayers={setNumberOfPlayers}\n        />\n      </ThemeProvider>\n    );\n  }\n\n  if (\n    (gameNumber === 16 && numberOfPlayers === 5) ||\n    (gameNumber === 10 && numberOfPlayers === 4)\n  ) {\n    return (\n      <ThemeProvider theme={theme}>\n        <div style={{ padding: \"5px\" }}>\n          <TournamentEnd\n            sorterPlayerArray={sorterPlayerArray}\n            setSortingOrder={setSortingOrder}\n            removePlayerArrayFromLocalStorage={\n              removePlayerArrayFromLocalStorage\n            }\n          />\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ padding: \"5px\" }}>\n        {playerArray.length < numberOfPlayers ? (\n          <Form savePlayerArrayToSate={savePlayerArrayToSate} />\n        ) : (\n          <Game\n            playerArray={playerArray}\n            setPlayerArray={setPlayerArray}\n            gameNumber={gameNumber}\n            setGameNumber={setGameNumber}\n            numberOfPlayers={numberOfPlayers}\n          />\n        )}\n        {!playerArray.length && (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              onClick={removePlayerArrayFromLocalStorage}\n              style={{ color: \"rgba(232,48,58,1)\" }}\n            >\n              Atpakaļ\n            </Button>\n          </div>\n        )}\n        {playerArray.length ? (\n          <>\n            <Stats\n              sorterPlayerArray={sorterPlayerArray}\n              setSortingOrder={setSortingOrder}\n              editPlayerName={editPlayerName}\n              playerToEdit={playerToEdit}\n              saveNewPlayerName={saveNewPlayerName}\n              gameNumber={gameNumber}\n              openEditPlayer={openEditPlayer}\n              setOpenEditPlayer={setOpenEditPlayer}\n            />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              {!openEditPlayer && (\n                <Button\n                  style={{ color: \"rgba(232,48,58,1)\" }}\n                  onClick={() => {\n                    if (window.confirm(\"Vai tiešām sākt jaunu turnīru?\"))\n                      removePlayerArrayFromLocalStorage();\n                  }}\n                >\n                  JAUNS TURNĪRS\n                </Button>\n              )}\n            </div>\n          </>\n        ) : null}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
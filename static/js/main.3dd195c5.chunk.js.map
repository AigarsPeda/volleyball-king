{"version":3,"sources":["ui/Theme.ts","components/Form.tsx","components/Player.tsx","components/Game.tsx","components/Stats.tsx","components/TournamentEnd.tsx","components/PlayerCountSelect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","typography","h4","fontSize","subtitle1","useStyles","makeStyles","root","margin","maxWidth","form","display","flexDirection","button","marginTop","width","height","backgroundClip","background","color","textField","Form","props","savePlayerArrayToSate","useState","name","setName","classes","className","onSubmit","e","preventDefault","TextField","label","required","value","onChange","target","InputProps","Button","variant","type","createStyles","paper","padding","spacing","textAlign","backgroundColor","fontWeight","letterSpacing","Player","player","Grid","container","direction","Paper","flexGrow","text","borderRadius","maskedInput","dots","marginBottom","playerPaper","justifyContent","border","Game","playerArray","setPlayerArray","setGameNumber","gameNumber","numberOfPlayers","teamAScore","setTeamAScore","teamBScore","setTeamBScore","teamA","teamB","allowOnlyNumbersInInput","replace","forEach","id","push","console","log","justify","item","style","inputProps","maxLength","onInput","lg","xs","map","a","key","b","onClick","length","parseInt","playerOne","playerTwo","newPlayerArray","bigPoints","smallPoints","prev","table","borderBottom","cursor","numbers","Stats","sorterPlayerArray","setSortingOrder","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","TournamentEnd","removePlayerArrayFromLocalStorage","window","confirm","formControl","minWidth","PlayerCountSelect","setNumberOfPlayers","React","open","setOpen","handleOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","event","MenuItem","App","JSON","parse","localStorage","getItem","sortingOrder","useEffect","setItem","stringify","sort","ThemeProvider","newPlayer","Math","floor","random","trim","arrayOfId","includes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dd195c5.chunk.js","sourcesContent":["import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n\nconst orange = \"#f86a28\";\nconst red = \"rgba(232,48,58,1)\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${orange}`\n    },\n    secondary: {\n      main: `${red}`\n    }\n  },\n  typography: {\n    //fontFamily: \"Open Sans, Helvetica\",\n    h4: { fontSize: \"35px\" },\n    subtitle1: {}\n  }\n});\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    maxWidth: \"25em\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  button: {\n    marginTop: \"10px\",\n    width: \"100%\",\n    height: \"50px\",\n    backgroundClip: \"#rgb(248,106,40)\",\n    background:\n      \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n    color: \"#fff\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  }\n}));\n\ninterface IForm {\n  savePlayerArrayToSate: (name: string) => void;\n}\n\nconst Form: React.FC<IForm> = props => {\n  const { savePlayerArrayToSate } = props;\n\n  const [name, setName] = useState<string>(\"\");\n  const classes = useStyles();\n\n  const makeArrayOfPlayers = (e: React.FormEvent) => {\n    e.preventDefault();\n    savePlayerArrayToSate(name);\n    setName(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={makeArrayOfPlayers}>\n        <TextField\n          label=\"Spēlētāja vārds\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          Pievienot spēlētāju\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      background:\n        \"linear-gradient(180deg, rgba(46,46,60,1) 0%, rgba(42,42,54,1) 100%)\",\n      backgroundColor: \"#22222a\",\n      color: \"#ffffff\",\n      margin: \"8px\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"3px\"\n    }\n  })\n);\n\ninterface IPlayer {\n  player: Player;\n}\n\nconst Player: React.FC<IPlayer> = props => {\n  const { player } = props;\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Paper className={classes.paper}>{player.name}</Paper>\n    </Grid>\n  );\n};\n\nexport default Player;\n","import React, { useState } from \"react\";\nimport Player from \"./Player\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  Button,\n  TextField\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      marginTop: \"10px\"\n    },\n    borderRadius: {\n      fontSize: 32,\n      color: \"#fff\",\n      padding: \"10px\"\n    },\n    textField: {\n      margin: \"5px\",\n      width: \"75px\",\n      fontSize: \"45px\",\n      textAlign: \"center\"\n    },\n    maskedInput: {\n      height: \"50px\",\n      fontSize: \"35px\",\n      width: \"55px\",\n      textAlign: \"center\"\n    },\n    dots: {\n      fontSize: \"45px\"\n    },\n    button: {\n      backgroundClip: \"rgb(248,106,40)\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      marginTop: \"10px\",\n      width: \"100%\",\n      height: \"50px\",\n      color: \"#fff\",\n      marginBottom: \"15px\"\n    },\n    playerPaper: {\n      padding: \"1px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      border: \"1px solid rgba(248,106,40,1)\",\n      backgroundColor: \"transparent\"\n    }\n  })\n);\n\ninterface IGame {\n  playerArray: Player[];\n  setPlayerArray: React.Dispatch<React.SetStateAction<Player[]>>;\n  setGameNumber: React.Dispatch<any>;\n  gameNumber: number;\n  numberOfPlayers: number;\n}\n\nconst Game: React.FC<IGame> = props => {\n  const {\n    playerArray,\n    setPlayerArray,\n    setGameNumber,\n    gameNumber,\n    numberOfPlayers\n  } = props;\n  const classes = useStyles();\n\n  const [teamAScore, setTeamAScore] = useState(\"\");\n  const [teamBScore, setTeamBScore] = useState(\"\");\n\n  const teamA: Player[] = [];\n  const teamB: Player[] = [];\n\n  const findWinner = () => {\n    if (teamAScore.length === 0 || teamBScore.length === 0) {\n      return;\n    }\n    if (teamAScore === teamBScore) {\n      return;\n    }\n    if (parseInt(teamAScore) > parseInt(teamBScore)) {\n      const [playerOne, playerTwo] = teamA;\n      const newPlayerArray = playerArray.map(player => {\n        if (player.id === playerOne.id || player.id === playerTwo.id) {\n          return {\n            ...player,\n            bigPoints: player.bigPoints + 1,\n            smallPoints: player.smallPoints + parseInt(teamAScore)\n          };\n        }\n        return player;\n      });\n      setPlayerArray(newPlayerArray);\n    }\n    if (parseInt(teamAScore) < parseInt(teamBScore)) {\n      const [playerOne, playerTwo] = teamB;\n      const newPlayerArray = playerArray.map(player => {\n        if (player.id === playerOne.id || player.id === playerTwo.id) {\n          return {\n            ...player,\n            bigPoints: player.bigPoints + 1,\n            smallPoints: player.smallPoints + parseInt(teamBScore)\n          };\n        }\n        return player;\n      });\n      setPlayerArray(newPlayerArray);\n    }\n    setTeamAScore(\"\");\n    setTeamBScore(\"\");\n    setGameNumber((prev: number) => prev + 1);\n  };\n\n  const allowOnlyNumbersInInput = (e: any) => {\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n  };\n\n  if (numberOfPlayers === 5) {\n    playerArray.forEach(player => {\n      switch (gameNumber) {\n        case 1:\n          if (player.id === 0 || player.id === 1) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 2:\n          if (player.id === 0 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 3:\n          if (player.id === 0 || player.id === 4) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 4:\n          if (player.id === 0 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 5:\n          if (player.id === 1 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 3 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 6:\n          if (player.id === 0 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 7:\n          if (player.id === 0 || player.id === 1) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 8:\n          if (player.id === 0 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 9:\n          if (player.id === 0 || player.id === 4) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 10:\n          if (player.id === 1 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 11:\n          if (player.id === 0 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 2) {\n            teamB.push(player);\n          }\n          break;\n\n        case 12:\n          if (player.id === 0 || player.id === 4) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 2) {\n            teamB.push(player);\n          }\n          break;\n        case 13:\n          if (player.id === 0 || player.id === 1) {\n            teamA.push(player);\n          } else if (player.id === 3 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 14:\n          if (player.id === 0 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 3 || player.id === 4) {\n            teamB.push(player);\n          }\n          break;\n        case 15:\n          if (player.id === 1 || player.id === 4) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  if (numberOfPlayers === 4) {\n    playerArray.forEach(player => {\n      switch (gameNumber) {\n        case 1:\n          if (player.id === 0 || player.id === 1) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 2:\n          if (player.id === 0 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 3:\n          if (player.id === 0 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 2) {\n            teamB.push(player);\n          }\n\n          break;\n        case 4:\n          if (player.id === 0 || player.id === 1) {\n            teamA.push(player);\n          } else if (player.id === 2 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 5:\n          if (player.id === 0 || player.id === 2) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 3) {\n            teamB.push(player);\n          }\n          break;\n        case 6:\n          if (player.id === 0 || player.id === 3) {\n            teamA.push(player);\n          } else if (player.id === 1 || player.id === 2) {\n            teamB.push(player);\n          }\n\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      {console.log(gameNumber)}\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Paper\n            style={{\n              marginTop: \"15px\",\n              background:\n                \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n              marginBottom: \"10px\"\n            }}\n          >\n            <TextField\n              className={classes.textField}\n              value={teamAScore}\n              onChange={e => setTeamAScore(e.target.value)}\n              variant=\"outlined\"\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n            <span className={classes.dots}>:</span>\n            <TextField\n              className={classes.textField}\n              value={teamBScore}\n              variant=\"outlined\"\n              onChange={e => setTeamBScore(e.target.value)}\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} justify=\"center\" direction=\"row\">\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamA.map(a => {\n              return <Player key={a.id} player={a} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamB.map(b => {\n              return <Player key={b.id} player={b} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid container justify=\"center\" direction=\"row\">\n          <Grid item lg={3} xs={10}>\n            <Button\n              onClick={findWinner}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Nākamā spēle\n            </Button>\n          </Grid>\n          <Grid item lg={12} xs={10}>\n            <div\n              style={{\n                textAlign: \"center\",\n                marginBottom: \"15px\",\n                color: \"#fff\",\n                background: \"transparent\"\n              }}\n            >\n              <h4 style={{ letterSpacing: \"2px\" }}>\n                Spēle Nr{\" \"}\n                <span style={{ fontSize: \"28px\", color: \"rgba(232,48,58,1)\" }}>\n                  {gameNumber}\n                </span>{\" \"}\n              </h4>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      maxWidth: 650,\n      backgroundColor: \"#2a2b37\",\n      color: \"#fff\"\n    },\n    text: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"2.5px\",\n      borderBottom: \"none\",\n      cursor: \"pointer\"\n    },\n    numbers: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n\n      borderBottom: \"none\"\n    }\n  })\n);\n\ninterface IStats {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Stats: React.FC<IStats> = props => {\n  const { sorterPlayerArray, setSortingOrder } = props;\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\">\n      <TableContainer\n        component={Paper}\n        style={{ maxWidth: \"500px\", marginTop: \"10px\" }}\n      >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.text}></TableCell>\n              <TableCell\n                align=\"right\"\n                className={classes.text}\n                onClick={() => setSortingOrder(\"smallPoints\")}\n              >\n                Punkti\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                className={classes.text}\n                onClick={() => setSortingOrder(\"bigPoints\")}\n              >\n                Uzvaras\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sorterPlayerArray.map(player => (\n              <TableRow key={player.id}>\n                <TableCell component=\"th\" scope=\"row\" className={classes.text}>\n                  {player.name}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.numbers}>\n                  {player.smallPoints}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.numbers}>\n                  {player.bigPoints}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\n\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Stats from \"./Stats\";\n\ninterface ITournamentEnd {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n  removePlayerArrayFromLocalStorage: () => void;\n}\n\nconst TournamentEnd: React.FC<ITournamentEnd> = props => {\n  const {\n    sorterPlayerArray,\n    setSortingOrder,\n    removePlayerArrayFromLocalStorage\n  } = props;\n  return (\n    <Grid container justify=\"center\">\n      <h1 style={{ fontSize: \"45px\", color: \"#fff\" }}>Turnīrs Beidzies!</h1>\n      <Stats\n        sorterPlayerArray={sorterPlayerArray}\n        setSortingOrder={setSortingOrder}\n      />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button\n          //color=\"primary\"\n          style={{\n            marginTop: \"10px\",\n            color: \"rgba(232,48,58,1)\",\n            fontSize: \"25px\",\n            letterSpacing: \"2px\"\n          }}\n          onClick={() => {\n            if (window.confirm(\"Vai tiešām sākt jaunu turnīru?\"))\n              removePlayerArrayFromLocalStorage();\n          }}\n        >\n          SĀKT JAUNU TŪRNĪRU\n        </Button>\n      </div>\n    </Grid>\n  );\n};\n\nexport default TournamentEnd;\n","import React from \"react\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  })\n);\n\ninterface IPlayerCountSelect {\n  numberOfPlayers: number | undefined;\n  setNumberOfPlayers: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst PlayerCountSelect: React.FC<IPlayerCountSelect> = props => {\n  const classes = useStyles();\n  const { numberOfPlayers, setNumberOfPlayers } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumberOfPlayers(event.target.value as number);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Button className={classes.button} onClick={handleOpen}>\n        Cik spētētāju būs?\n      </Button>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Skaits</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={numberOfPlayers}\n          onChange={handleChange}\n        >\n          <MenuItem value={0}>\n            <em>None</em>\n          </MenuItem>\n\n          <MenuItem value={4}>Četri</MenuItem>\n          <MenuItem value={5}>Pieci</MenuItem>\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n};\n\nexport default PlayerCountSelect;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./ui/Theme\";\nimport { Button } from \"@material-ui/core\";\n\nimport Form from \"./components/Form\";\nimport Game from \"./components/Game\";\nimport Stats from \"./components/Stats\";\nimport TournamentEnd from \"./components/TournamentEnd\";\nimport PlayerCountSelect from \"./components/PlayerCountSelect\";\n\n//const NUMBER_OF_PLAYERS = null;\n\nconst App: React.FC = () => {\n  const [playerArray, setPlayerArray] = useState<Player[]>(() =>\n    JSON.parse(localStorage.getItem(\"playerArray\") || \"[]\")\n  );\n  const [gameNumber, setGameNumber] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"gameNumber\") || \"1\")\n  );\n  const [sortingOrder, setSortingOrder] = useState(\"bigPoints\");\n  const [numberOfPlayers, setNumberOfPlayers] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"numberOfPlayers\") || \"0\")\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"playerArray\", JSON.stringify(playerArray));\n    localStorage.setItem(\"gameNumber\", JSON.stringify(gameNumber));\n    localStorage.setItem(\"numberOfPlayers\", JSON.stringify(numberOfPlayers));\n  }, [playerArray, gameNumber, numberOfPlayers]);\n\n  const removePlayerArrayFromLocalStorage = () => {\n    let newPlayerArray = playerArray;\n    newPlayerArray = [];\n    setPlayerArray(newPlayerArray);\n    let newGameNumber = gameNumber;\n    newGameNumber = 1;\n    setGameNumber(newGameNumber);\n    let newNumberOfPlayers = numberOfPlayers;\n    newNumberOfPlayers = 0;\n    setNumberOfPlayers(newNumberOfPlayers);\n  };\n\n  const savePlayerArrayToSate = (name: string) => {\n    const newPlayer: Player = {\n      id: Math.floor(Math.random() * Math.floor(numberOfPlayers)),\n      name: name.trim(),\n      smallPoints: 0,\n      bigPoints: 0\n    };\n\n    const arrayOfId = playerArray.map(player => player.id);\n\n    do {\n      newPlayer.id = Math.floor(Math.random() * Math.floor(numberOfPlayers));\n    } while (arrayOfId.includes(newPlayer.id));\n\n    setPlayerArray([...playerArray, newPlayer]);\n  };\n\n  const sorterPlayerArray = playerArray.sort(function(a, b) {\n    if (sortingOrder === \"bigPoints\") {\n      return b.bigPoints - a.bigPoints;\n    }\n    if (sortingOrder === \"smallPoints\") {\n      return b.smallPoints - a.smallPoints;\n    }\n    return b.id - a.id;\n  });\n\n  console.log(playerArray);\n\n  if (numberOfPlayers === 0) {\n    return (\n      <ThemeProvider theme={theme}>\n        <PlayerCountSelect\n          numberOfPlayers={numberOfPlayers}\n          setNumberOfPlayers={setNumberOfPlayers}\n        />\n      </ThemeProvider>\n    );\n  }\n\n  console.log(numberOfPlayers);\n\n  if (\n    (gameNumber === 15 && numberOfPlayers === 5) ||\n    (gameNumber === 6 && numberOfPlayers === 4)\n  ) {\n    return (\n      <ThemeProvider theme={theme}>\n        <TournamentEnd\n          sorterPlayerArray={sorterPlayerArray}\n          setSortingOrder={setSortingOrder}\n          removePlayerArrayFromLocalStorage={removePlayerArrayFromLocalStorage}\n        />\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ padding: \"5px\" }}>\n        {playerArray.length < numberOfPlayers ? (\n          <Form savePlayerArrayToSate={savePlayerArrayToSate} />\n        ) : (\n          <Game\n            playerArray={playerArray}\n            setPlayerArray={setPlayerArray}\n            gameNumber={gameNumber}\n            setGameNumber={setGameNumber}\n            numberOfPlayers={numberOfPlayers}\n          />\n        )}\n        {playerArray.length ? (\n          <>\n            <Stats\n              sorterPlayerArray={sorterPlayerArray}\n              setSortingOrder={setSortingOrder}\n            />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                style={{ color: \"rgba(232,48,58,1)\" }}\n                onClick={() => {\n                  if (window.confirm(\"Vai tiešām sākt jaunu turnīru?\"))\n                    removePlayerArrayFromLocalStorage();\n                }}\n              >\n                JAUNS TURNĪRS\n              </Button>\n            </div>\n          </>\n        ) : null}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
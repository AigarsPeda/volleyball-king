{"version":3,"sources":["ui/Theme.ts","data/language.ts","components/Form.tsx","components/Player.tsx","Utils/findWinner.ts","components/Game.tsx","Utils/gameLogic.ts","components/EditPlayer.tsx","components/Stats.tsx","components/TournamentEnd.tsx","components/PlayerCountSelect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","typography","h4","fontSize","subtitle1","languagesText","text","buttonNewTournament","buttonBack","points","wins","gameNumber","nextGame","playersName","editPlayersName","addPlayer","four","five","count","howManyPlayers","tournamentEnd","newTournaments","newTournamentsConfirm","useStyles","makeStyles","root","margin","maxWidth","form","display","flexDirection","button","marginTop","width","height","backgroundClip","background","color","textField","Form","props","savePlayerArrayToSate","language","useState","name","setName","classes","className","onSubmit","e","preventDefault","TextField","label","checkedENG","required","value","onChange","target","InputProps","Button","variant","type","createStyles","paper","padding","spacing","textAlign","backgroundColor","fontWeight","letterSpacing","Player","player","Grid","container","direction","Paper","whoIsWinner","team","playerArray","teamAScore","playerOne","playerTwo","map","id","bigPoints","smallPoints","parseInt","flexGrow","borderRadius","maskedInput","dots","marginBottom","playerPaper","justifyContent","border","Game","setPlayerArray","setGameNumber","numberOfPlayers","setTeamAScore","teamBScore","setTeamBScore","teamA","teamB","allowOnlyNumbersInInput","replace","forEach","push","gameForFive","gameForFour","justify","item","style","inputProps","maxLength","onInput","lg","xs","a","key","b","onClick","length","newPlayerArray","prev","position","top","left","right","bottom","paddingTop","paddingLeft","paddingRight","plus","cursor","EditPlayer","playerToEdit","saveNewPlayerName","setOpenEditPlayer","useEffect","table","borderBottom","numbers","pencil","marginRight","Stats","sorterPlayerArray","setSortingOrder","editPlayerName","openEditPlayer","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","editPlayer","TournamentEnd","removePlayerArrayFromLocalStorage","window","confirm","formControl","minWidth","title","WebkitBackgroundClip","WebkitTextFillColor","grid","marginLeft","PlayerCountSelect","setNumberOfPlayers","React","open","setOpen","handleOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","event","MenuItem","App","JSON","parse","localStorage","getItem","setLanguage","sortingOrder","setPlayerToEdit","setItem","stringify","sort","ThemeProvider","console","log","Switch","checked","newPlayer","Math","floor","random","trim","arrayOfId","includes","find","newName","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dfc11478.chunk.js","sourcesContent":["import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n\nconst orange = \"#f86a28\";\nconst red = \"rgba(232,48,58,1)\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${orange}`\n    },\n    secondary: {\n      main: `${red}`\n    }\n  },\n  typography: {\n    //fontFamily: \"Open Sans, Helvetica\",\n    h4: { fontSize: \"35px\" },\n    subtitle1: {}\n  }\n});\n\nexport default theme;\n","export const languagesText: MainText = {\n  eng: {\n    text:\n      \"Hi! My name is Aigars, I am front end developer and I’m looking for a job\",\n    buttonNewTournament: \"New Tournament\",\n    buttonBack: \"Back\",\n    points: \"Points\",\n    wins: \"Wins\",\n    gameNumber: \"Game Nr\",\n    nextGame: \"Next game\",\n    playersName: \"Players name\",\n    editPlayersName: \"Edit players name\",\n    addPlayer: \"Add player\",\n    four: \"Four\",\n    five: \"Five\",\n    count: \"Count\",\n    howManyPlayers: \"How many players\",\n    tournamentEnd: \"Tournament has finished\",\n    newTournaments: \"START NEW TOURNAMENT\",\n    newTournamentsConfirm: \"Do You really want to start a new tournament?\"\n  },\n  lv: {\n    text: `Čau! Mani sauc Aigars, un es meklēju front end izstrādātāja darbu.`,\n    buttonNewTournament: \"JAUNS TURNĪRS\",\n    buttonBack: \"Atpakaļ\",\n    points: \"Punkti\",\n    wins: \"Uzvaras\",\n    gameNumber: \"Spēle Nr\",\n    nextGame: \"Nākamā spēle\",\n    playersName: \"Spēlētāja vārds\",\n    editPlayersName: \"Labot spēlētāja vārdu\",\n    addPlayer: \"Pievienot spēlētāju\",\n    four: \"Četri\",\n    five: \"Pieci\",\n    count: \"Skaits\",\n    howManyPlayers: \"Cik spēlētāju būs?\",\n    tournamentEnd: \"Turnīrs Beidzies!\",\n    newTournaments: \"SĀKT JAUNU TŪRNĪRU\",\n    newTournamentsConfirm: \"Vai Tu tiešām vēlies sākt jaunu turnīru?\"\n  }\n};\n","import React, { useState } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\nimport { languagesText } from \"../data/language\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    maxWidth: \"25em\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  button: {\n    marginTop: \"10px\",\n    width: \"100%\",\n    height: \"50px\",\n    backgroundClip: \"#rgb(248,106,40)\",\n    background:\n      \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n    color: \"#fff\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  }\n}));\n\ninterface IForm {\n  savePlayerArrayToSate: (name: string) => void;\n  language: Lang;\n}\n\nconst Form: React.FC<IForm> = props => {\n  const { savePlayerArrayToSate, language } = props;\n\n  const [name, setName] = useState<string>(\"\");\n  const classes = useStyles();\n\n  const makeArrayOfPlayers = (e: React.FormEvent) => {\n    e.preventDefault();\n    savePlayerArrayToSate(name);\n    setName(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={makeArrayOfPlayers}>\n        <TextField\n          label={\n            language.checkedENG\n              ? languagesText.eng.playersName\n              : languagesText.lv.playersName\n          }\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          {language.checkedENG\n            ? languagesText.eng.addPlayer\n            : languagesText.lv.addPlayer}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      background:\n        \"linear-gradient(180deg, rgba(46,46,60,1) 0%, rgba(42,42,54,1) 100%)\",\n      backgroundColor: \"#22222a\",\n      color: \"#ffffff\",\n      margin: \"8px\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"3px\"\n    }\n  })\n);\n\ninterface IPlayer {\n  player: Player;\n}\n\nconst Player: React.FC<IPlayer> = props => {\n  const { player } = props;\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Paper className={classes.paper}>{player.name}</Paper>\n    </Grid>\n  );\n};\n\nexport default Player;\n","export const whoIsWinner = (\n  team: Player[],\n  playerArray: Player[],\n  teamAScore: string\n) => {\n  const [playerOne, playerTwo] = team;\n  const newPlayerArray = playerArray.map(player => {\n    if (player.id === playerOne.id || player.id === playerTwo.id) {\n      return {\n        ...player,\n        bigPoints: player.bigPoints + 1,\n        smallPoints: player.smallPoints + parseInt(teamAScore)\n      };\n    }\n    return player;\n  });\n  return newPlayerArray;\n};\n","import React, { useState } from \"react\";\nimport Player from \"./Player\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  Button,\n  TextField\n} from \"@material-ui/core\";\n\nimport { gameForFive, gameForFour } from \"../Utils/gameLogic\";\nimport { whoIsWinner } from \"../Utils//findWinner\";\nimport { languagesText } from \"../data/language\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      marginTop: \"10px\"\n    },\n    borderRadius: {\n      fontSize: 32,\n      color: \"#fff\",\n      padding: \"10px\"\n    },\n    textField: {\n      margin: \"5px\",\n      width: \"75px\",\n      fontSize: \"45px\",\n      textAlign: \"center\"\n    },\n    maskedInput: {\n      height: \"50px\",\n      fontSize: \"35px\",\n      width: \"55px\",\n      textAlign: \"center\"\n    },\n    dots: {\n      fontSize: \"45px\"\n    },\n    button: {\n      backgroundClip: \"rgb(248,106,40)\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      marginTop: \"10px\",\n      width: \"100%\",\n      height: \"50px\",\n      color: \"#fff\",\n      marginBottom: \"15px\"\n    },\n    playerPaper: {\n      padding: \"1px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      border: \"1px solid rgba(248,106,40,1)\",\n      backgroundColor: \"transparent\"\n    }\n  })\n);\n\ninterface IGame {\n  playerArray: Player[];\n  setPlayerArray: React.Dispatch<React.SetStateAction<Player[]>>;\n  setGameNumber: React.Dispatch<any>;\n  gameNumber: number;\n  numberOfPlayers: number;\n  language: Lang;\n}\n\nconst Game: React.FC<IGame> = props => {\n  const {\n    playerArray,\n    setPlayerArray,\n    setGameNumber,\n    gameNumber,\n    numberOfPlayers,\n    language\n  } = props;\n  const classes = useStyles();\n\n  const [teamAScore, setTeamAScore] = useState(\"\");\n  const [teamBScore, setTeamBScore] = useState(\"\");\n\n  const teamA: Player[] = [];\n  const teamB: Player[] = [];\n\n  const findWinner = () => {\n    if (teamAScore.length === 0 || teamBScore.length === 0) {\n      return;\n    }\n    if (teamAScore === teamBScore) {\n      return;\n    }\n    if (parseInt(teamAScore) > parseInt(teamBScore)) {\n      const newPlayerArray = whoIsWinner(teamA, playerArray, teamAScore);\n      setPlayerArray(newPlayerArray);\n    }\n    if (parseInt(teamAScore) < parseInt(teamBScore)) {\n      const newPlayerArray = whoIsWinner(teamB, playerArray, teamBScore);\n      setPlayerArray(newPlayerArray);\n    }\n    setTeamAScore(\"\");\n    setTeamBScore(\"\");\n    setGameNumber((prev: number) => prev + 1);\n  };\n\n  const allowOnlyNumbersInInput = (e: any) => {\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n  };\n\n  //Game logic for 5\n  if (numberOfPlayers === 5) {\n    gameForFive(playerArray, gameNumber, teamA, teamB);\n  }\n  //Game logic for 4\n  if (numberOfPlayers === 4) {\n    gameForFour(playerArray, gameNumber, teamA, teamB);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Paper\n            style={{\n              marginTop: \"15px\",\n              background:\n                \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n              marginBottom: \"10px\"\n            }}\n          >\n            <TextField\n              className={classes.textField}\n              value={teamAScore}\n              onChange={e => setTeamAScore(e.target.value)}\n              variant=\"outlined\"\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n            <span className={classes.dots}>:</span>\n            <TextField\n              className={classes.textField}\n              value={teamBScore}\n              variant=\"outlined\"\n              onChange={e => setTeamBScore(e.target.value)}\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} justify=\"center\" direction=\"row\">\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamA.map(a => {\n              return <Player key={a.id} player={a} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamB.map(b => {\n              return <Player key={b.id} player={b} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid container justify=\"center\" direction=\"row\">\n          <Grid item lg={3} xs={10}>\n            <Button\n              onClick={findWinner}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              {language.checkedENG\n                ? languagesText.eng.nextGame\n                : languagesText.lv.nextGame}\n            </Button>\n          </Grid>\n          <Grid item lg={12} xs={10}>\n            <div\n              style={{\n                textAlign: \"center\",\n                marginBottom: \"15px\",\n                color: \"#fff\",\n                background: \"transparent\"\n              }}\n            >\n              <h4 style={{ letterSpacing: \"2px\" }}>\n                {language.checkedENG\n                  ? languagesText.eng.gameNumber\n                  : languagesText.lv.gameNumber}{\" \"}\n                <span style={{ fontSize: \"28px\", color: \"rgba(232,48,58,1)\" }}>\n                  {gameNumber}\n                </span>{\" \"}\n              </h4>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Game;\n","//Game for Five\nexport const gameForFive = (\n  playerArray: Player[],\n  gameNumber: number,\n  teamA: Player[],\n  teamB: Player[]\n) => {\n  playerArray.forEach(player => {\n    switch (gameNumber) {\n      case 1:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 2:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 3:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 4:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 5:\n        if (player.id === 1 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 6:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 7:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 8:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 9:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 10:\n        if (player.id === 1 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 11:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 12:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 13:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 14:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 15:\n        if (player.id === 1 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      default:\n        break;\n    }\n  });\n};\n\n//Game for Four\nexport const gameForFour = (\n  playerArray: Player[],\n  gameNumber: number,\n  teamA: Player[],\n  teamB: Player[]\n) => {\n  playerArray.forEach(player => {\n    switch (gameNumber) {\n      case 1:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 2:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 3:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 4:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 5:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 6:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 7:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 8:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 9:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      default:\n        break;\n    }\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { languagesText } from \"../data/language\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(60, 58, 66, 0.900)\"\n  },\n  form: {\n    paddingTop: \"15em\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    margin: \"auto\",\n    maxWidth: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  },\n  plus: {\n    color: \"rgba(232,48,58,1)\",\n    textAlign: \"right\",\n    cursor: \"pointer\",\n    fontSize: \"45px\"\n  }\n}));\n\ninterface IEditPlayer {\n  playerToEdit: Player | undefined;\n  saveNewPlayerName: (playerToEdit: Player, newName: string) => void;\n  setOpenEditPlayer: React.Dispatch<React.SetStateAction<boolean>> | undefined;\n  language: Lang;\n}\n\nconst EditPlayer: React.FC<IEditPlayer> = props => {\n  const [name, setName] = useState(\"\");\n  const {\n    playerToEdit,\n    saveNewPlayerName,\n    setOpenEditPlayer,\n    language\n  } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!playerToEdit) {\n      return;\n    }\n    setName(playerToEdit.name);\n  }, [playerToEdit]);\n\n  const savePlayerName = () => {\n    if (!playerToEdit) {\n      return;\n    }\n    saveNewPlayerName(playerToEdit, name);\n  };\n\n  const closeEditPlayer = () => {\n    if (!setOpenEditPlayer) {\n      return;\n    }\n    setOpenEditPlayer(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={savePlayerName}>\n        <span className={classes.plus}>\n          <IoIosClose onClick={closeEditPlayer} />\n        </span>\n\n        <TextField\n          required\n          label={\n            language.checkedENG\n              ? languagesText.eng.playersName\n              : languagesText.lv.playersName\n          }\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          {language.checkedENG\n            ? languagesText.eng.editPlayersName\n            : languagesText.lv.editPlayersName}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPlayer;\n","import React from \"react\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody\n} from \"@material-ui/core\";\nimport EditPlayer from \"./EditPlayer\";\nimport { languagesText } from \"../data/language\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      maxWidth: 650,\n      backgroundColor: \"#2a2b37\",\n      color: \"#fff\"\n    },\n    text: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"2.5px\",\n      borderBottom: \"none\",\n      cursor: \"pointer\"\n    },\n    numbers: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n\n      borderBottom: \"none\"\n    },\n    pencil: {\n      marginRight: \"15px\",\n      fontSize: \"10px\"\n    }\n  })\n);\n\ninterface IStats {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n  editPlayerName?: (id: number) => void;\n  playerToEdit?: Player | undefined;\n  saveNewPlayerName?: (playerToEdit: Player, newName: string) => void;\n  gameNumber?: number;\n  openEditPlayer?: boolean;\n  setOpenEditPlayer?: React.Dispatch<React.SetStateAction<boolean>>;\n  language: Lang;\n}\n\nconst Stats: React.FC<IStats> = props => {\n  const {\n    sorterPlayerArray,\n    setSortingOrder,\n    editPlayerName,\n    playerToEdit,\n    saveNewPlayerName,\n    gameNumber,\n    openEditPlayer,\n    setOpenEditPlayer,\n    language\n  } = props;\n  const classes = useStyles();\n\n  const editPlayer = (player: Player) => {\n    if (!editPlayerName || !setOpenEditPlayer) {\n      return;\n    }\n    editPlayerName(player.id);\n    setOpenEditPlayer(true);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <TableContainer\n          component={Paper}\n          style={{ maxWidth: \"500px\", marginTop: \"10px\" }}\n        >\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.text}></TableCell>\n                <TableCell\n                  align=\"right\"\n                  className={classes.text}\n                  onClick={() => setSortingOrder(\"smallPoints\")}\n                >\n                  {language.checkedENG\n                    ? languagesText.eng.points\n                    : languagesText.lv.points}\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  className={classes.text}\n                  onClick={() => setSortingOrder(\"bigPoints\")}\n                >\n                  {language.checkedENG\n                    ? languagesText.eng.wins\n                    : languagesText.eng.wins}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sorterPlayerArray.map(player => (\n                <TableRow key={player.id}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.text}\n                  >\n                    {editPlayerName && gameNumber === 1 && (\n                      <FaPencilAlt\n                        className={classes.pencil}\n                        onClick={() => editPlayer(player)}\n                      />\n                    )}\n\n                    {player.name}\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.numbers}>\n                    {player.smallPoints}\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.numbers}>\n                    {player.bigPoints}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      {editPlayerName && saveNewPlayerName && openEditPlayer && (\n        <EditPlayer\n          language={language}\n          playerToEdit={playerToEdit}\n          saveNewPlayerName={saveNewPlayerName}\n          setOpenEditPlayer={setOpenEditPlayer}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\n\nimport { Button, Grid } from \"@material-ui/core\";\n\nimport Stats from \"./Stats\";\n\nimport { languagesText } from \"../data/language\";\n\ninterface ITournamentEnd {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n  removePlayerArrayFromLocalStorage: () => void;\n  language: Lang;\n}\n\nconst TournamentEnd: React.FC<ITournamentEnd> = props => {\n  const {\n    sorterPlayerArray,\n    setSortingOrder,\n    removePlayerArrayFromLocalStorage,\n    language\n  } = props;\n  return (\n    <Grid container justify=\"center\">\n      <h1 style={{ fontSize: \"45px\", color: \"#fff\" }}>\n        {language.checkedENG\n          ? languagesText.eng.tournamentEnd\n          : languagesText.lv.tournamentEnd}\n      </h1>\n      <Stats\n        language={language}\n        sorterPlayerArray={sorterPlayerArray}\n        setSortingOrder={setSortingOrder}\n      />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button\n          //color=\"primary\"\n          style={{\n            marginTop: \"10px\",\n            color: \"rgba(232,48,58,1)\",\n            fontSize: \"25px\",\n            letterSpacing: \"2px\"\n          }}\n          onClick={() => {\n            if (\n              window.confirm(\n                language.checkedENG\n                  ? languagesText.eng.newTournamentsConfirm\n                  : languagesText.lv.newTournamentsConfirm\n              )\n            )\n              removePlayerArrayFromLocalStorage();\n          }}\n        >\n          {language.checkedENG\n            ? languagesText.eng.newTournaments\n            : languagesText.lv.newTournaments}\n        </Button>\n      </div>\n    </Grid>\n  );\n};\n\nexport default TournamentEnd;\n","import React from \"react\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nimport { languagesText } from \"../data/language\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2),\n      color: \"#fff\",\n      fontSize: \"18px\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 190\n    },\n    title: {\n      fontSize: \"60px\",\n      fontWeight: \"bold\",\n      letterSpacing: \"3px\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      WebkitBackgroundClip: \"text\",\n      WebkitTextFillColor: \"transparent\"\n    },\n    grid: {\n      marginBottom: \"10px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  })\n);\n\ninterface IPlayerCountSelect {\n  numberOfPlayers: number | undefined;\n  setNumberOfPlayers: React.Dispatch<React.SetStateAction<number>>;\n  language: Lang;\n}\n\nconst PlayerCountSelect: React.FC<IPlayerCountSelect> = props => {\n  const classes = useStyles();\n  const { numberOfPlayers, setNumberOfPlayers, language } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumberOfPlayers(event.target.value as number);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={classes.grid}>\n        <h1 className={classes.title}>THE KING</h1>\n      </Grid>\n      <Grid item style={{ margin: \"auto\" }}>\n        <Button className={classes.button} onClick={handleOpen}>\n          {language.checkedENG\n            ? languagesText.eng.howManyPlayers\n            : languagesText.lv.howManyPlayers}\n        </Button>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            {language.checkedENG\n              ? languagesText.eng.count\n              : languagesText.lv.count}\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={numberOfPlayers}\n            onChange={handleChange}\n          >\n            <MenuItem value={0} style={{ letterSpacing: \"1px\" }}>\n              <em>None</em>\n            </MenuItem>\n\n            <MenuItem value={4} style={{ letterSpacing: \"1px\" }}>\n              <em>\n                {language.checkedENG\n                  ? languagesText.eng.four\n                  : languagesText.lv.four}\n              </em>\n            </MenuItem>\n            <MenuItem value={5} style={{ letterSpacing: \"1px\" }}>\n              <em>\n                {language.checkedENG\n                  ? languagesText.eng.five\n                  : languagesText.lv.five}\n              </em>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PlayerCountSelect;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./ui/Theme\";\nimport { Button, Switch } from \"@material-ui/core\";\n\nimport Form from \"./components/Form\";\nimport Game from \"./components/Game\";\nimport Stats from \"./components/Stats\";\nimport TournamentEnd from \"./components/TournamentEnd\";\nimport PlayerCountSelect from \"./components/PlayerCountSelect\";\n\nimport { languagesText } from \"./data/language\";\n\nconst App: React.FC = () => {\n  const [playerArray, setPlayerArray] = useState<Player[]>(() =>\n    JSON.parse(localStorage.getItem(\"playerArray\") || \"[]\")\n  );\n  const [gameNumber, setGameNumber] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"gameNumber\") || \"1\")\n  );\n  const [numberOfPlayers, setNumberOfPlayers] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"numberOfPlayers\") || \"0\")\n  );\n  const [language, setLanguage] = useState<Lang>(() =>\n    JSON.parse(localStorage.getItem(\"language\") || \"{ checkedENG: false }\")\n  );\n\n  const defaultLang = { checkedENG: false };\n\n  const [sortingOrder, setSortingOrder] = useState(\"bigPoints\");\n  const [playerToEdit, setPlayerToEdit] = useState<Player>();\n  const [openEditPlayer, setOpenEditPlayer] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"playerArray\", JSON.stringify(playerArray));\n    localStorage.setItem(\"gameNumber\", JSON.stringify(gameNumber));\n    localStorage.setItem(\"numberOfPlayers\", JSON.stringify(numberOfPlayers));\n    localStorage.setItem(\"language\", JSON.stringify(language));\n  }, [playerArray, gameNumber, numberOfPlayers, language]);\n\n  const removePlayerArrayFromLocalStorage = () => {\n    let newPlayerArray = playerArray;\n    newPlayerArray = [];\n    setPlayerArray(newPlayerArray);\n    let newGameNumber = gameNumber;\n    newGameNumber = 1;\n    setGameNumber(newGameNumber);\n    let newNumberOfPlayers = numberOfPlayers;\n    newNumberOfPlayers = 0;\n    setNumberOfPlayers(newNumberOfPlayers);\n  };\n\n  const savePlayerArrayToSate = (name: string) => {\n    const newPlayer: Player = {\n      id: Math.floor(Math.random() * Math.floor(numberOfPlayers)),\n      name: name.trim(),\n      smallPoints: 0,\n      bigPoints: 0\n    };\n\n    const arrayOfId = playerArray.map(player => player.id);\n\n    do {\n      newPlayer.id = Math.floor(Math.random() * Math.floor(numberOfPlayers));\n    } while (arrayOfId.includes(newPlayer.id));\n\n    setPlayerArray([...playerArray, newPlayer]);\n  };\n\n  const sorterPlayerArray = playerArray.sort(function(a, b) {\n    if (sortingOrder === \"bigPoints\") {\n      return b.bigPoints - a.bigPoints;\n    }\n    if (sortingOrder === \"smallPoints\") {\n      return b.smallPoints - a.smallPoints;\n    }\n    return b.id - a.id;\n  });\n\n  const editPlayerName = (id: number) => {\n    const newPlayer = playerArray.find(player => player.id === id);\n    setPlayerToEdit(newPlayer);\n  };\n\n  const saveNewPlayerName = (playerToEdit: Player, newName: string) => {\n    const newPlayerArray = playerArray.map(player => {\n      if (player.id === playerToEdit.id) {\n        return {\n          ...player,\n          name: newName\n        };\n      }\n      return player;\n    });\n    setPlayerArray(newPlayerArray);\n  };\n\n  const handleChange = (name: string) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setLanguage({ ...language, [name]: event.target.checked });\n  };\n\n  if (numberOfPlayers === 0) {\n    return (\n      <ThemeProvider theme={theme}>\n        {console.log(language)}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n            textAlign: \"center\",\n            padding: \"7px\"\n          }}\n        >\n          <Switch\n            checked={language.checkedENG}\n            onChange={handleChange(\"checkedENG\")}\n            value=\"checkedB\"\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n          <h2\n            style={{\n              marginTop: \"auto\",\n              marginBottom: \"auto\",\n              paddingLeft: \"10px\",\n              paddingRight: \"10px\",\n              color: \"#fff\"\n            }}\n          >\n            {language.checkedENG ? \"LV\" : \"ENG\"}\n          </h2>\n        </div>\n        <PlayerCountSelect\n          language={language}\n          numberOfPlayers={numberOfPlayers}\n          setNumberOfPlayers={setNumberOfPlayers}\n        />\n      </ThemeProvider>\n    );\n  }\n\n  if (\n    (gameNumber === 16 && numberOfPlayers === 5) ||\n    (gameNumber === 10 && numberOfPlayers === 4)\n  ) {\n    return (\n      <ThemeProvider theme={theme}>\n        <div style={{ padding: \"5px\" }}>\n          <TournamentEnd\n            language={language}\n            sorterPlayerArray={sorterPlayerArray}\n            setSortingOrder={setSortingOrder}\n            removePlayerArrayFromLocalStorage={\n              removePlayerArrayFromLocalStorage\n            }\n          />\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ padding: \"5px\" }}>\n        {playerArray.length < numberOfPlayers ? (\n          <Form\n            savePlayerArrayToSate={savePlayerArrayToSate}\n            language={language}\n          />\n        ) : (\n          <Game\n            language={language}\n            playerArray={playerArray}\n            setPlayerArray={setPlayerArray}\n            gameNumber={gameNumber}\n            setGameNumber={setGameNumber}\n            numberOfPlayers={numberOfPlayers}\n          />\n        )}\n        {!playerArray.length && (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              onClick={removePlayerArrayFromLocalStorage}\n              style={{ color: \"rgba(232,48,58,1)\" }}\n            >\n              {language.checkedENG\n                ? languagesText.eng.buttonBack\n                : languagesText.lv.buttonBack}\n            </Button>\n          </div>\n        )}\n        {playerArray.length ? (\n          <>\n            <Stats\n              sorterPlayerArray={sorterPlayerArray}\n              setSortingOrder={setSortingOrder}\n              editPlayerName={editPlayerName}\n              playerToEdit={playerToEdit}\n              saveNewPlayerName={saveNewPlayerName}\n              gameNumber={gameNumber}\n              openEditPlayer={openEditPlayer}\n              setOpenEditPlayer={setOpenEditPlayer}\n              language={language}\n            />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              {!openEditPlayer && (\n                <Button\n                  style={{ color: \"rgba(232,48,58,1)\" }}\n                  onClick={() => {\n                    if (\n                      window.confirm(\n                        language.checkedENG\n                          ? languagesText.eng.newTournamentsConfirm\n                          : languagesText.lv.newTournamentsConfirm\n                      )\n                    )\n                      removePlayerArrayFromLocalStorage();\n                  }}\n                >\n                  {language.checkedENG\n                    ? languagesText.eng.newTournaments\n                    : languagesText.lv.newTournaments}\n                </Button>\n              )}\n            </div>\n          </>\n        ) : null}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
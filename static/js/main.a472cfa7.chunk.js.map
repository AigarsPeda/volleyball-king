{"version":3,"sources":["ui/Theme.ts","components/Form.tsx","components/Player.tsx","components/Game.tsx","components/Stats.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","secondary","typography","h4","fontSize","subtitle1","useStyles","makeStyles","root","margin","maxWidth","form","display","flexDirection","button","marginTop","width","height","backgroundClip","background","color","textField","Form","props","savePlayerArrayToSate","useState","name","setName","classes","className","onSubmit","e","preventDefault","TextField","label","required","value","onChange","target","InputProps","Button","variant","type","createStyles","paper","padding","spacing","textAlign","backgroundColor","fontWeight","letterSpacing","Player","player","Grid","container","direction","Paper","flexGrow","text","borderRadius","maskedInput","dots","playerPaper","justifyContent","border","Game","playerArray","setPlayerArray","setGameNumber","gameNumber","teamAScore","setTeamAScore","teamBScore","setTeamBScore","teamA","teamB","allowOnlyNumbersInInput","replace","forEach","id","push","console","log","justify","item","style","marginBottom","inputProps","maxLength","onInput","lg","xs","map","a","key","b","onClick","length","parseInt","playerOne","playerTwo","newPlayerArray","bigPoints","smallPoints","prev","table","borderBottom","cursor","numbers","Stats","sorterPlayerArray","setSortingOrder","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","App","JSON","parse","localStorage","getItem","sortingOrder","useEffect","setItem","stringify","sort","ThemeProvider","newPlayer","Math","floor","random","trim","arrayOfId","includes","window","confirm","removePlayerArrayFromLocalStorage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a472cfa7.chunk.js","sourcesContent":["import { createMuiTheme, Theme } from \"@material-ui/core/styles\";\n\nconst orange = \"#f86a28\";\nconst gray = \"#22222a\";\n\nconst theme: Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${orange}`\n    },\n    secondary: {\n      main: `${gray}`\n    }\n  },\n  typography: {\n    //fontFamily: \"Open Sans, Helvetica\",\n    h4: { fontSize: \"35px\" },\n    subtitle1: {}\n  }\n});\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport { Button, TextField, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: \"auto\",\n    maxWidth: \"25em\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  button: {\n    marginTop: \"10px\",\n    width: \"100%\",\n    height: \"50px\",\n    backgroundClip: \"#rgb(248,106,40)\",\n    background:\n      \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n    color: \"#fff\"\n  },\n  textField: {\n    color: \"#ffffff\"\n  }\n}));\n\ninterface IForm {\n  savePlayerArrayToSate: (name: string) => void;\n}\n\nconst Form: React.FC<IForm> = props => {\n  const { savePlayerArrayToSate } = props;\n\n  const [name, setName] = useState<string>(\"\");\n  const classes = useStyles();\n\n  const makeArrayOfPlayers = (e: React.FormEvent) => {\n    e.preventDefault();\n    savePlayerArrayToSate(name);\n    setName(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={makeArrayOfPlayers}>\n        <TextField\n          label=\"Spēlētāja vārds\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n          margin=\"normal\"\n          InputProps={{\n            className: classes.textField\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          type=\"submit\"\n        >\n          Nākamais\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      background:\n        \"linear-gradient(180deg, rgba(46,46,60,1) 0%, rgba(42,42,54,1) 100%)\",\n      backgroundColor: \"#22222a\",\n      color: \"#ffffff\",\n      margin: \"8px\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"3px\"\n    }\n  })\n);\n\ninterface IPlayer {\n  player: Player;\n}\n\nconst Player: React.FC<IPlayer> = props => {\n  const { player } = props;\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Paper className={classes.paper}>{player.name}</Paper>\n    </Grid>\n  );\n};\n\nexport default Player;\n","import React, { useState } from \"react\";\nimport Player from \"./Player\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  Button,\n  TextField\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      marginTop: \"10px\"\n    },\n    borderRadius: {\n      fontSize: 32,\n      color: \"#fff\",\n      padding: \"10px\"\n    },\n    textField: {\n      margin: \"5px\",\n      width: \"75px\",\n      fontSize: \"45px\",\n      textAlign: \"center\"\n    },\n    maskedInput: {\n      height: \"50px\",\n      fontSize: \"35px\",\n      width: \"55px\",\n      textAlign: \"center\"\n    },\n    dots: {\n      fontSize: \"45px\"\n    },\n    button: {\n      backgroundClip: \"rgb(248,106,40)\",\n      background:\n        \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n      marginTop: \"10px\",\n      width: \"100%\",\n      height: \"50px\",\n      color: \"#fff\"\n    },\n    playerPaper: {\n      padding: \"1px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      border: \"1px solid rgba(248,106,40,1)\",\n      backgroundColor: \"transparent\"\n    }\n  })\n);\n\ninterface IGame {\n  playerArray: Player[];\n  setPlayerArray: React.Dispatch<React.SetStateAction<Player[]>>;\n  setGameNumber: React.Dispatch<any>;\n  gameNumber: number;\n}\n\nconst Game: React.FC<IGame> = props => {\n  const { playerArray, setPlayerArray, setGameNumber, gameNumber } = props;\n  const classes = useStyles();\n\n  const [teamAScore, setTeamAScore] = useState(\"\");\n  const [teamBScore, setTeamBScore] = useState(\"\");\n\n  const teamA: Player[] = [];\n  const teamB: Player[] = [];\n\n  const findWinner = () => {\n    if (teamAScore.length === 0 || teamBScore.length === 0) {\n      return;\n    }\n    if (teamAScore === teamBScore) {\n      return;\n    }\n    if (parseInt(teamAScore) > parseInt(teamBScore)) {\n      const [playerOne, playerTwo] = teamA;\n      const newPlayerArray = playerArray.map(player => {\n        if (player.id === playerOne.id || player.id === playerTwo.id) {\n          return {\n            ...player,\n            bigPoints: player.bigPoints + 1,\n            smallPoints: player.smallPoints + parseInt(teamAScore)\n          };\n        }\n        return player;\n      });\n      setPlayerArray(newPlayerArray);\n    }\n    if (parseInt(teamAScore) < parseInt(teamBScore)) {\n      const [playerOne, playerTwo] = teamB;\n      const newPlayerArray = playerArray.map(player => {\n        if (player.id === playerOne.id || player.id === playerTwo.id) {\n          return {\n            ...player,\n            bigPoints: player.bigPoints + 1,\n            smallPoints: player.smallPoints + parseInt(teamBScore)\n          };\n        }\n        return player;\n      });\n      setPlayerArray(newPlayerArray);\n    }\n    setTeamAScore(\"\");\n    setTeamBScore(\"\");\n    setGameNumber((prev: number) => prev + 1);\n  };\n\n  const allowOnlyNumbersInInput = (e: any) => {\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n  };\n\n  playerArray.forEach(player => {\n    switch (gameNumber) {\n      case 1:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 2:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 3:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 4:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 5:\n        if (player.id === 1 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 6:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 7:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 8:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 9:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n      case 10:\n        if (player.id === 1 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 11:\n        if (player.id === 0 || player.id === 3) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n\n      case 12:\n        if (player.id === 0 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 1 || player.id === 2) {\n          teamB.push(player);\n        }\n        break;\n      case 13:\n        if (player.id === 0 || player.id === 1) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 14:\n        if (player.id === 0 || player.id === 2) {\n          teamA.push(player);\n        } else if (player.id === 3 || player.id === 4) {\n          teamB.push(player);\n        }\n        break;\n      case 15:\n        if (player.id === 1 || player.id === 4) {\n          teamA.push(player);\n        } else if (player.id === 2 || player.id === 3) {\n          teamB.push(player);\n        }\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      {console.log(gameNumber)}\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Paper\n            style={{\n              marginTop: \"15px\",\n              background:\n                \"linear-gradient(90deg, rgba(248,106,40,1) 0%, rgba(232,48,58,1) 100%)\",\n              marginBottom: \"10px\"\n            }}\n          >\n            <TextField\n              className={classes.textField}\n              value={teamAScore}\n              onChange={e => setTeamAScore(e.target.value)}\n              variant=\"outlined\"\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n            <span className={classes.dots}>:</span>\n            <TextField\n              className={classes.textField}\n              value={teamBScore}\n              variant=\"outlined\"\n              onChange={e => setTeamBScore(e.target.value)}\n              type=\"text\"\n              inputProps={{\n                maxLength: 2,\n                className: classes.borderRadius,\n                style: { textAlign: \"center\" }\n              }}\n              onInput={e => allowOnlyNumbersInInput(e)}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} justify=\"center\" direction=\"row\">\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamA.map(a => {\n              return <Player key={a.id} player={a} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid item lg={4} xs={6}>\n          <Paper className={classes.playerPaper}>\n            {teamB.map(b => {\n              return <Player key={b.id} player={b} />;\n            })}\n          </Paper>\n        </Grid>\n\n        <Grid container justify=\"center\">\n          <Grid item lg={3} xs={10}>\n            <Button\n              onClick={findWinner}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Nākamā spēle\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  createStyles,\n  Theme,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      maxWidth: 650,\n      backgroundColor: \"#2a2b37\",\n      color: \"#fff\"\n    },\n    text: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n      letterSpacing: \"2.5px\",\n      borderBottom: \"none\",\n      cursor: \"pointer\"\n    },\n    numbers: {\n      color: \"#fff\",\n      fontWeight: \"bolder\",\n\n      borderBottom: \"none\"\n    }\n  })\n);\n\ninterface IStats {\n  sorterPlayerArray: Player[];\n  setSortingOrder: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Stats: React.FC<IStats> = props => {\n  const { sorterPlayerArray, setSortingOrder } = props;\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\">\n      <TableContainer\n        component={Paper}\n        style={{ maxWidth: \"500px\", marginTop: \"30px\" }}\n      >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.text}></TableCell>\n              <TableCell\n                align=\"right\"\n                className={classes.text}\n                onClick={() => setSortingOrder(\"smallPoints\")}\n              >\n                Punkti\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                className={classes.text}\n                onClick={() => setSortingOrder(\"bigPoints\")}\n              >\n                Uzvaras\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sorterPlayerArray.map(player => (\n              <TableRow key={player.id}>\n                <TableCell component=\"th\" scope=\"row\" className={classes.text}>\n                  {player.name}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.numbers}>\n                  {player.smallPoints}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.numbers}>\n                  {player.bigPoints}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default Stats;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./ui/Theme\";\nimport { Button } from \"@material-ui/core\";\n\nimport Form from \"./components/Form\";\nimport Game from \"./components/Game\";\nimport Stats from \"./components/Stats\";\n\nconst NUMBER_OF_PLAYERS = 5;\n\nconst App: React.FC = () => {\n  const [playerArray, setPlayerArray] = useState<Player[]>(() =>\n    JSON.parse(localStorage.getItem(\"playerArray\") || \"[]\")\n  );\n  const [gameNumber, setGameNumber] = useState<number>(() =>\n    JSON.parse(localStorage.getItem(\"gameNumber\") || \"1\")\n  );\n  const [sortingOrder, setSortingOrder] = useState(\"bigPoints\");\n\n  useEffect(() => {\n    localStorage.setItem(\"playerArray\", JSON.stringify(playerArray));\n    localStorage.setItem(\"gameNumber\", JSON.stringify(gameNumber));\n  }, [playerArray, gameNumber]);\n\n  const removePlayerArrayFromLocalStorage = () => {\n    let newPlayerArray = playerArray;\n    newPlayerArray = [];\n    setPlayerArray(newPlayerArray);\n    let newGameNumber = gameNumber;\n    newGameNumber = 1;\n    setGameNumber(newGameNumber);\n  };\n\n  const savePlayerArrayToSate = (name: string) => {\n    const newPlayer: Player = {\n      id: Math.floor(Math.random() * Math.floor(5)),\n      name: name.trim(),\n      smallPoints: 0,\n      bigPoints: 0\n    };\n\n    const arrayOfId = playerArray.map(player => player.id);\n\n    do {\n      newPlayer.id = Math.floor(Math.random() * Math.floor(5));\n    } while (arrayOfId.includes(newPlayer.id));\n\n    setPlayerArray([...playerArray, newPlayer]);\n  };\n\n  const sorterPlayerArray = playerArray.sort(function(a, b) {\n    if (sortingOrder === \"bigPoints\") {\n      return b.bigPoints - a.bigPoints;\n    }\n    if (sortingOrder === \"smallPoints\") {\n      return b.smallPoints - a.smallPoints;\n    }\n    return b.id - a.id;\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ padding: \"5px\" }}>\n        {playerArray.length < NUMBER_OF_PLAYERS ? (\n          <Form savePlayerArrayToSate={savePlayerArrayToSate} />\n        ) : (\n          <Game\n            playerArray={playerArray}\n            setPlayerArray={setPlayerArray}\n            gameNumber={gameNumber}\n            setGameNumber={setGameNumber}\n          />\n        )}\n        {playerArray.length ? (\n          <>\n            <Stats\n              sorterPlayerArray={sorterPlayerArray}\n              setSortingOrder={setSortingOrder}\n            />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                color=\"primary\"\n                onClick={() => {\n                  if (window.confirm(\"Vai tiešām sākt jaunu turnīru?\"))\n                    removePlayerArrayFromLocalStorage();\n                }}\n              >\n                JAUNS TURNĪRS\n              </Button>\n            </div>\n          </>\n        ) : null}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}